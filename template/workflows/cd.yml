name: Continuous Deployment

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
    
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}  # Make sure this secret is correctly set
        heroku_email: ${{ secrets.HEROKU_EMAIL }}  # Make sure this secret is correctly set
    
    - name: Health check
      run: curl -f ${{ secrets.PRODUCTION_URL }}/health
      continue-on-error: true  # Ensures that the workflow continues even if the health check fails
    
    - name: Notify Deployment Status
      if: always()  # Sends notification regardless of deployment success or failure
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
